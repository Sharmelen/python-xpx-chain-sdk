import websockets

from nem2 import client
from nem2 import models
from tests import harness
from tests import responses


UID = [
    '{"uid": "A7Z3K5CZ3WMPMCI2IKHRCPWDHGJAYR76"}'
]

BLOCKS = [
    '{"meta":{"hash":"755A2F31BDEFE60A5777C59501E1F5CDBE367DAA815AF4C5FABD0C8A715DA5B2","generationHash":"3D60B6EA2C9BE0924DCCFB2C9A7E6162A09A202DEF1995205B813D05A0CD1A44","totalFee":[0,0],"numTransactions":0,"merkleTree":["AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA="]},"block":{"signature":"9BB04338D9BCC7D2CC91DC89337E471A7165BE66499BAACAE30BC29892C97D1D1FC0551F0B223DCAA49E1F3B8B3BDFAC856E49D40DFED4EDF1398DABD2474E03","signer":"0F68FEDFC0CF8FBB564A5596DBAA29F3951A7E0D9E9562A12CFA3B4CC1FC2949","version":36867,"type":33091,"height":[23230,0],"timestamp":[2650919583,21],"difficulty":[3774076566,2468],"previousBlockHash":"2D587E70ED5DD9183DF086CF16EAEFA69A0070186077DA88F4A349255713587E","blockTransactionsHash":"0000000000000000000000000000000000000000000000000000000000000000"}}',
    '{"meta":{"hash":"9D97AB5F489E32B29B404074CFF5CE469658EFF6EFBE0D7E110847A8EBBC738B","generationHash":"81524E82ED22C21F746C1E65F852745AC841A5D09D8F0124F36DC6A09C80CBF5","totalFee":[0,0],"numTransactions":0,"merkleTree":["AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA="]},"block":{"signature":"5B94E1FFAFA127FDD26A2316FA50656C2ACDAFEB039C73E480E14DD0EF58C2B36588DB59C891E50180E2620E5BB1F48A5FD286802356D4BAB384439CB20B340D","signer":"0F68FEDFC0CF8FBB564A5596DBAA29F3951A7E0D9E9562A12CFA3B4CC1FC2949","version":36867,"type":33091,"height":[23231,0],"timestamp":[2650935587,21],"difficulty":[1498403095,2454],"previousBlockHash":"755A2F31BDEFE60A5777C59501E1F5CDBE367DAA815AF4C5FABD0C8A715DA5B2","blockTransactionsHash":"0000000000000000000000000000000000000000000000000000000000000000"}}',
    '{"meta":{"hash":"483E6C9B37A5A8BF40A1130E9B23A958023E4ADB114627A1C8F3B39D8642F677","generationHash":"A41500B30DDB896B298A5992FE2196865958B5C922B9510A96B5894470338897","totalFee":[0,0],"numTransactions":0,"merkleTree":["AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA="]},"block":{"signature":"2144BBDB4CE5A5F3AD486DDDEDF4526B9927C94F73D70AA75BB9052BB8FFEAD851310B7EB96A6A607C54C4C87D47D70232229450F679F44BCD2EE4DC7CBB4C05","signer":"0F68FEDFC0CF8FBB564A5596DBAA29F3951A7E0D9E9562A12CFA3B4CC1FC2949","version":36867,"type":33091,"height":[23232,0],"timestamp":[2650949592,21],"difficulty":[3863704253,2464],"previousBlockHash":"9D97AB5F489E32B29B404074CFF5CE469658EFF6EFBE0D7E110847A8EBBC738B","blockTransactionsHash":"0000000000000000000000000000000000000000000000000000000000000000"}}',
    '{"meta":{"hash":"DC431A6F19E0FC72C2C1E41172B78541AF717292EAC505697EB8FE1A187CAD33","generationHash":"5868F04CA626C63418D99465C8DC4008B0CE0D9881DFC347A2F6119AFB67E042","totalFee":[0,0],"numTransactions":0,"merkleTree":["AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA="]},"block":{"signature":"86B6A0650B7EB8E0EC623E08076F57BBD9D179422ED3EECA6FE1F954353C67091C95BB6D5F429FF8ADB608544B469BD37BE88C5281A05A5D44F6EA8F01BD7C0B","signer":"0F68FEDFC0CF8FBB564A5596DBAA29F3951A7E0D9E9562A12CFA3B4CC1FC2949","version":36867,"type":33091,"height":[23233,0],"timestamp":[2650967600,21],"difficulty":[4132927750,2455],"previousBlockHash":"483E6C9B37A5A8BF40A1130E9B23A958023E4ADB114627A1C8F3B39D8642F677","blockTransactionsHash":"0000000000000000000000000000000000000000000000000000000000000000"}}',
    '{"meta":{"hash":"C49C1176374FE48CBAA7A059CCF7F61C047CCAC0F43E294ECAF6861746E86392","generationHash":"E4AB9AC06B077A15F107DEF0B98511630955E64892F5227628D218FCEEBC7E9B","totalFee":[0,0],"numTransactions":0,"merkleTree":["AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA="]},"block":{"signature":"2C84805D59A9373370327145B4D7868A031D0ADDB7E057B54ACB3098DA047B837B9AF6B1656236A3FC0F34692E3F675065EA029586151CA8C0DCBAF11A7CA309","signer":"0F68FEDFC0CF8FBB564A5596DBAA29F3951A7E0D9E9562A12CFA3B4CC1FC2949","version":36867,"type":33091,"height":[23234,0],"timestamp":[2650977605,21],"difficulty":[1261994241,2455],"previousBlockHash":"DC431A6F19E0FC72C2C1E41172B78541AF717292EAC505697EB8FE1A187CAD33","blockTransactionsHash":"0000000000000000000000000000000000000000000000000000000000000000"}}',
]


class TestListener(harness.TestCase):

    async def test_block(self):
        with websockets.default_response(UID):
            async with client.Listener('{responses.ENDPOINT}/ws') as listener:
                self.assertEqual(await listener.uid, "A7Z3K5CZ3WMPMCI2IKHRCPWDHGJAYR76")
                await listener.new_block()
                with websockets.default_response(BLOCKS):
                    counter = 0
                    async for message in listener:
                        if counter > 4:
                            break
                        self.assertEqual(message.channel_name, 'block')
                        self.assertIsInstance(message.message, models.BlockInfo)
                        self.assertEqual(message.message.height, 23230 + counter)
                        counter += 1
